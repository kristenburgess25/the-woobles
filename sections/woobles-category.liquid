{{ 'woobles-category.css' | asset_url | stylesheet_tag }}
<div id="wooble-category-page" class="page-width section-template">
  <h1 class="title">Meet The Woobles</h1>
  
  {%- assign woobles_data = 'woobles-products.json' | asset_url -%}
  <script id="wooble-data" type="application/json" data-source="{{ woobles_data }}"></script>

  <div id="featured-wooble"></div>
  <div id="beginner"></div>
  <div id="beginner-plus"></div>
  <div id="bundles"></div>
  <div id="intermediate"></div>
  <div id="accessory"></div>
</div>

{% javascript %}
document.addEventListener('DOMContentLoaded', function () {
  // ======= LOAD JSON DATA =======
  const source = document.getElementById('wooble-data')?.getAttribute('data-source');

  if (!source) {
    console.error("Woobles data source not found.");
    return;
  }

  fetch(source)
    .then(response => response.json())
    .then(data => {
      // ======= VALIDATE AND EXTRACT PRODUCTS =======
      const products = Array.isArray(data.products)
        ? data.products
        : Array.isArray(data)
          ? data
          : null;

      if (!products) {
        throw new Error("Invalid JSON format: Expected array or { products: [] }");
      }

      // ======= IDENTIFY FEATURED PRODUCT =======
      const featuredProduct = products.find((product) => {
        const tagsArray = product.tags
          ? product.tags.split(',').map((t) => t.trim())
          : [];
        return tagsArray.includes("Featured");
      });

      if (featuredProduct) {
        renderFeatured(featuredProduct);
      }

      // ======= INITIALIZE CATEGORY GROUPS =======
      const sectionGroups = {
        bundles: [],
        intermediate: [],
        "beginner-plus": [],
        beginner: [],
        accessory: [],
      };

      const assignedProductIds = new Set();
      const featuredId = featuredProduct?.id;

      // ======= ASSIGN PRODUCTS TO SECTIONS =======
      products.forEach(product => {
        if (product.id === featuredId || assignedProductIds.has(product.id)) return;

        const productType = (product.product_type || "").toLowerCase();
        const title = product.title || "";

        if (title.includes("Bundle")) {
          sectionGroups.bundles.push(product);
        } else if (productType.includes("intermediate")) {
          sectionGroups.intermediate.push(product);
        } else if (productType.includes("beginner+")) {
          sectionGroups["beginner-plus"].push(product);
        } else if (productType.includes("beginner")) {
          sectionGroups.beginner.push(product);
        } else if (productType.includes("accessory")) {
          sectionGroups.accessory.push(product);
        } else {
          console.warn("Uncategorized product:", product.title);
          return;
        }

        assignedProductIds.add(product.id);
      });

      // ======= RENDER EACH CATEGORY SECTION =======
      Object.entries(sectionGroups).forEach(([sectionId, group]) => {
        const sectionEl = document.getElementById(sectionId);
        renderSection(sectionEl, sectionId, group);
      });
    })

    // ======= ERROR HANDLING =======
    .catch(err => {
      console.error("Failed to load or parse woobles JSON:", err);
      const fallback = document.querySelector(".woobles-category-page");
      if (fallback) {
        fallback.innerHTML = `<p style="color: red;">Oops! Failed to load Woobles data.</p>`;
      }
    });

  // ======= RENDER FEATURED =======
  function renderFeatured(product) {
    const container = document.getElementById("featured-wooble");
    const description = product.body_html.split("</p>")[0] + "</p>";

    container.innerHTML = `
      <section class="featured-wooble">
        <h2>Featured Wooble</h2>
        <h3>${product.title}</h3>
        ${description}
        ${product.image?.src ? `
          <img src="${product.image.src}" alt="${product.title}" />
        ` : ''}
      </section>
    `;
  }

  // ======= RENDER CATEGORY SECTION =======
  function renderSection(container, title, products) {
    if (!container) return;

    let html = `<h2>${formatTitle(title)}</h2>`;
    html += `<div class="wooble-grid">`;

    products.forEach((product) => {
      const price = product.variants?.[0]?.price || "";
      html += `
        <div class="wooble-card">
          <h3>${product.title}</h3>
          ${product.image?.src ? `
            <img src="${product.image.src}" alt="${product.title}" />
          ` : ''}
          ${price ? `<p>$${price}</p>` : ''}
        </div>
      `;
    });

    html += `</div>`;
    container.innerHTML = html;
  }

  // ======= FORMAT TITLE DISPLAY =======
  function formatTitle(key) {
    switch (key) {
      case "bundles": return "Bundles";
      case "intermediate": return "Intermediate Kits";
      case "beginner-plus": return "Beginner+ Kits";
      case "beginner": return "Beginner Kits";
      case "accessory": return "Accessory Kits";
      default: return key;
    }
  }
});
{% endjavascript %}

{% schema %}
{
  "name": "Woobles Category Page",
  "tag": "section",
  "class": "section",
  "settings": []
}
{% endschema %}
